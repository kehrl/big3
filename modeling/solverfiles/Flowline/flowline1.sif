check keywords warn

$name = "flowline1"

$yearinsec = 365.25*24*60*60
$rhoi = 917.0/(1.0e6*yearinsec^2)   
$rhow = 1025.0/(1.0e6*yearinsec^2) 
$gravity = -9.81*yearinsec^2
$n=3

$ function waterpressure(Z) {\
  rhow = 1025.0;\
  waterline = 0.0;\
  G = 9.81;\
  _waterpressure = 0.0;\
  if (Z>waterline) {\
       _waterpressure = 0.0;\
  }else {\
       _waterpressure = 1.0 * rhow * G * (waterline - Z);\
  }\
}

Header
  Mesh DB "Mesh_Input" "Elmer"
End

Constants
  Water Density = Real $rhow 
End

!---------------------------------------------------
!---------------- SIMULATION -----------------------
!---------------------------------------------------

Simulation
  Coordinate System  = Cartesian 2D
  Simulation Type = Steady State

  Timestepping Method = "BDF"
  BDF Order = 1
  Output Intervals = 1        
  
  Steady State Max Iterations = 20
  Steady State Min Iterations = 1

  Max Output Level = 3
  Output File = File "$name".result"
  Output Variable 1 = Velocity 1
  Output Variable 2 = Velocity 2
End

!---------------------------------------------------
!---------------- BODIES ---------------------------
!---------------------------------------------------

!! Glacier
Body 1
  Name = "ice"
  Equation = 1
  Body Force = 1
  Material = 1
  Initial Condition = 1
End

!---------------------------------------------------
!---------------- INITIAL CONDITIONS ---------------
!---------------------------------------------------

!! Glacier
Initial Condition 1
  Pressure = Real 0.0e0
  Velocity 1 = Real 0
  Velocity 2 = Real 0.0e0
End

!---------------------------------------------------
!---------------- BODY FORCES ----------------------
!---------------------------------------------------

Body Force 1
  ! Shape factor
  !Flow BodyForce 1 = Variable Coordinate 1
  !   Real Procedure "ElmerIceUSF" "ShapeFactorGravity_x"
  !Flow BodyForce 2 = Variable Coordinate 1
  !   Real Procedure "ElmerIceUSF" "ShapeFactorGravity_y"
  !Shape Gravity 1 = Real  0.0                                 
  !Shape Gravity 2 = Real $gravity      

  !Shape Factor = Variable Coordinate 1
  !  Real
  !    Include "Inputs/shapefactor.dat"
  !  End
  
  ! Lateral Friction, Gagliardini 2010
  Flow BodyForce 1 = Variable Coordinate 1
     Real Procedure "ElmerIceUSF" "LateralFriction_x"
  Flow BodyForce 2 = Variable Coordinate 1
     Real Procedure "ElmerIceUSF" "LateralFriction_y"
  Lateral Friction Gravity 1 = Real 0.0    
  Lateral Friction Gravity 2 = Real $gravity    


  Lateral Friction Coefficient = Variable Coordinate 1
    Real Procedure "Flowline.so" "LateralFrictionCoefficient"
  Lateral Friction Exponent = Real $(1.0/n)
  Flow Solver Name = String Flow Solution
  
  Pressure Load = Variable Coordinate 1
    Real Procedure "Flowline.so" "LateralConvergence"
  
End

!---------------------------------------------------
!---------------- MATERIALS ------------------------
!---------------------------------------------------

!! ice material properties in MPa - m - a system 
Material 1

  Density = Real $rhoi     
  Viscosity = Variable Coordinate 2
    Real Procedure "Flowline.so" "Viscosity"
  Viscosity Model = String "power law"
  Viscosity Exponent = Real $(1.0/n)
  Critical Shear Rate = Real 1.0e-10

  !! for computeDevStress
  Cauchy = Logical True
  Sea level = Real 0.0
  
End

!---------------------------------------------------
!---------------- SOLVERS --------------------------
!---------------------------------------------------

Solver 1
  Procedure = "SaveData" "SaveMaterials"
  Parameter 1 = "Viscosity"
End

Solver 2
   Exec Solver = "Before Timestep"
   Equation = "Normal Vector"
   Variable = "Normal Vector"   

   Variable DOFs = 2 
   Procedure = "ElmerIceSolvers" "ComputeNormalSolver"
   Optimize Bandwidth = Logical False 
   ComputeAll = Logical False
   
End

Solver 3
  !Exec Solver = "Never"
  Equation = "Navier-Stokes"
  Variable = Flow Solution[Velocity:2 Pressure:1]
  Stabilize = Logical True
  Flow Model = Stokes
  Linear System Solver = Direct
  Linear System Direct Method = MUMPS
  Linear System Preconditioning = "ILU1" 
  Nonlinear System Max Iterations = 100
  Nonlinear System Convergence Tolerance  = 1.0e-6
  Nonlinear System Newton After Iterations = 100
  Nonlinear System Newton After Tolerance = 1.0e-06
  Nonlinear System Relaxation Factor = 1.00
  Nonlinear System Reset Newton = Logical False
  Steady State Convergence Tolerance = Real 1.0e-3
  Calculate Loads = Logical True
  Calculate Weights = Logical True

  Update Exported Variables = Logical True
  Nonlinear Update Exported Variables = Logical True
End

Solver 4
  Equation = String "StressSolver"
  Procedure = "ElmerIceSolvers" "ComputeDevStress"          
  Variable = -nooutput "Sij"
  Variable DOFs = 1
  Exported Variable 1 = Stress[Sxx:1 Syy:1 Szz:1 Sxy:1]
  Exported Variable 1 DOFs = 4
  
  Flow Solver Name = String "Flow Solution"
  Stress Variable Name = String "Stress"
  Linear System Solver = Direct         
  Linear System Direct Method = MUMPS
End

Solver 5

  Equation = "Eij"          
  Variable = -nooutput "Eij"     
  Variable DOFs = 1

  Exported Variable 1 = StrainRate[Exx:1 Eyy:1 Ezz:1 Exy:1 Eii:1]
  Exported Variable 1 DOFs = 5

  Procedure = "ElmerIceSolvers" "ComputeStrainRate"
  Flow Solver Name = String "Flow Solution"
  StrainRate Variable Name = String "StrainRate"

  Linear System Solver = Direct         
  Linear System Direct Method = mumps
End 

Solver 6
 Exec Solver = "After timestep"
 Exec Interval = 1
 Equation = "result output"
 Procedure = "ResultOutputSolve" "ResultOutputSolver"
 Output File Name = File "$name"."
 Output Format = String "vtu"
End

Solver 7
  Equation = SaveLine
  Procedure = "SaveData" "SaveLine"
  Exec Solver = String "After all"
  Filename = "elmer/"$name".dat"
End



!---------------------------------------------------
!---------------- EQUATIONS ------------------------
!---------------------------------------------------

Equation 1
  Active Solvers(7) = 1 2 3 4 5 6 7
End

!---------------------------------------------------
!---------------- BOUNDARY CONDITIONS --------------
!---------------------------------------------------

!! BC  Bedrock + Shelf
Boundary Condition 1
  Name = "bottom"
  Target Boundaries(1) = 1  
  Shape Bedrock = Logical True

  Flow Force BC = Logical True
  Normal-Tangential Velocity = Logical True
  Compute Normal = Logical True
  
  Velocity 1 = Real 0.0e0
  
  !! Linear
  ! Slip Coefficient 2 = Variable Coordinate 1
  !   Real Procedure "Flowline.so" "Slip_Linear"
  
  !! Weertman   
  Slip Coefficient 2 =  Variable Coordinate 1
    Real Procedure "ElmerIceUSF" "Sliding_Weertman"   
  Weertman Friction Coefficient = Variable Coordinate 1
    Real
      Include "Inputs/beta_weertman.dat"
    End  
  Weertman Exponent = Real $(1.0/3.0)
  Weertman Linear Velocity = Real 0.0001   

  Save Line = Logical True
End


!! BC  Free surface Top
Boundary Condition 2
  Name = "glacier surface"
  Target Boundaries(1) = 3
  Shape Surface = Logical True
  Depth = Real 0.0
  
  Save Line = Logical True
End

!! Upper glacier
Boundary Condition 3
  Name = "back"
  Target Boundaries(1) = 4
  
  Velocity 1 = Variable Coordinate 2
     Real Procedure "Flowline.so" "Inflow"

  Save Line = Logical True
End

Boundary Condition 4
  Name = "Calving front"
  Target Boundaries(1) = 2
  Flow Force BC = Logical True  
  
  External Pressure = Variable Coordinate 2 !we are in MPa units
    Real MATC "-1.0*waterpressure(tx)*1.0E-06"

  Save Line = Logical True
End
